#!/usr/bin/env ruby

require 'notcurses'
require 'rubygems'

def find_gem_directory(gem_name)
  spec = Gem::Specification.find_by_name(gem_name)
  spec.gem_dir
rescue Gem::LoadError
  puts "Gem '#{gem_name}' is not installed."
  nil
end

include Notcurses

data_dir = File.join [
  find_gem_directory('notcurses'),
  'data',
]

movfile = File.join [
  data_dir,
  'notcursesIII.mov',
]

ncroot_opts = NotcursesOptions.new
ncroot = notcurses_init(ncroot_opts, STDOUT)[:return]

at_exit do
  notcurses_stop(ncroot) if ncroot

  if $! && !$!.is_a?(SystemExit)
    puts "An uncaught exception occurred: #{$!.inspect}"
    puts "Backtrace:"
    puts $!.backtrace
  end
end

stdp = notcurses_stdplane_const(ncroot)[:return]

ncv = ncvisual_from_file(movfile)[:return]
rows = ncplane_dim_y(stdp)[:return]
cols = ncplane_dim_x(stdp)[:return]

ncv_opts = NcvisualOptions.new(
  n: stdp,
  scaling: NCSCALE_STRETCH,
  flags: NCVISUAL_OPTION_NOINTERPOLATE
)

ncv_plane = ncvisual_blit(ncroot, ncv, ncv_opts)
ncplane_putwstr_aligned(stdp, rows / 2, NCALIGN_CENTER, "ðŸ˜º IT WOOORRKKSSS ðŸ˜º")
ncplane_putwstr_aligned(stdp, (rows / 2) + 1, NCALIGN_CENTER, "ðŸ˜º PRESS ANY KEY TO EXIT ðŸ˜º")
notcurses_render(ncroot)

ch = Ncinput.new
notcurses_get(ncroot, Time.now, ch)
